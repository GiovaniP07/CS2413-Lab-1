#include <stdio.h>

void dfs(char** grid, int gridSize, int* gridColSize, int row, int col) {
    if (row < 0 || col < 0 || row >= gridSize || col >= gridColSize[row] || grid[row][col] != '1')
        return;

    grid[row][col] = '0';

    dfs(grid, gridSize, gridColSize, row - 1, col);
    dfs(grid, gridSize, gridColSize, row + 1, col);
    dfs(grid, gridSize, gridColSize, row, col - 1);
    dfs(grid, gridSize, gridColSize, row, col + 1);
}

int numIslands(char** grid, int gridSize, int* gridColSize) {
    int count = 0;
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridColSize[i]; j++) {
            if (grid[i][j] == '1') {
                count++;
                dfs(grid, gridSize, gridColSize, i, j);
            }
        }
    }

    return count;
}

int main() {
    char row0[] = {'1','1','1','1','0'};
    char row1[] = {'1','1','0','1','0'};
    char row2[] = {'1','1','0','0','0'};
    char row3[] = {'0','0','0','0','0'};

    char* grid[] = { row0, row1, row2, row3 };

    int gridColSize[] = {5, 5, 5, 5};
    int islandCount = numIslands(grid, 4, gridColSize);
    printf("Number of islands: %d\n", islandCount);

    return 0;
}
